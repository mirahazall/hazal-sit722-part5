# 
# GitHub Actions workflow.
#
# Automatically deploys the microservices to Kubernetes on push to any branch. 
#

name: Deploy microservice

on:
  #
  # Deploys the microservice on push to the main branch of this code repository.
  #
  push: 
    branches:
      - master

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}

    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

       # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6 # Specify the version you want to use

      # Initialize Terraform
  #    - name: Terraform Init
    #    run: terraform init

      # Apply Terraform configuration
  #    - name: Terraform Apply
   #     run: terraform apply -auto-approve
   #     env:
   #       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
   #       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
   #       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
   #       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

   #   - name: install az cli 
   #     run: |
   #      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

   #   - name: install az cli 
   #     run: |
   #      sudo az aks install-cli

      # Login to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

   #   - name: Retrieve kubeconfig and encode to base64
   #     run: |
   #       az aks get-credentials --resource-group deakinlibrary --name deakinlibrary --file kubeconfig.yaml     

   #   - name: Base64 encode the kubeconfig
   #     id: encode-kubeconfig
   #     run: |
   #       BASE64_KUBECONFIG=$(cat kubeconfig.yaml | base64 > kubeconfig.txt)

   #   - name: Set up Azure CLI
   #     uses: azure/azure-cli-action@v1
   #     with:
    #      azcliversion: '2.48.0'  # You can specify the version you need

    #  - name: Get Kubernetes credentials
    #    run: |
     #     az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
           
        # Set up kubectl using a pre-existing kubeconfig in GitHub Secrets
      - name: Set up kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.BASE64_KUBECONFIG }}
          kubectl-version: v1.24.2


      - name: Login to Azure Container Registry
        run: echo ${{ secrets.ARM_CLIENT_SECRET }} | docker login ${{ secrets.CONTAINER_REGISTRY }} -u ${{ secrets.ARM_CLIENT_ID }} --password-stdin

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      #
      # Builds the Docker image.
      #
      - name: Build
        run: ./scripts/build-image.sh

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: ./scripts/push-image.sh
      
      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: ./scripts/deploy.sh